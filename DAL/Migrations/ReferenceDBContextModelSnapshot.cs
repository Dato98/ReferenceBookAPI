// <auto-generated />
using System;
using DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(ReferenceDBContext))]
    partial class ReferenceDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Entities.ContactInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("ContactInformation");
                });

            modelBuilder.Entity("DAL.Entities.LinkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("LinkTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "თანამშრომელი"
                        },
                        new
                        {
                            Id = 2,
                            Type = "ნათესავი"
                        },
                        new
                        {
                            Id = 3,
                            Type = "ნაცნობი"
                        },
                        new
                        {
                            Id = 4,
                            Type = "სხვა"
                        });
                });

            modelBuilder.Entity("DAL.Entities.LinkedPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LinkTypeId");

                    b.Property<int>("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("LinkTypeId");

                    b.HasIndex("PersonId");

                    b.ToTable("LinkedPeople");
                });

            modelBuilder.Entity("DAL.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("Date")
                        .HasMaxLength(60);

                    b.Property<string>("NameEng")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NameGeo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SurnameEng")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("SurnameGeo")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Thumb");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("DAL.Entities.ContactInformation", b =>
                {
                    b.HasOne("DAL.Entities.Person", "Person")
                        .WithMany("ContactInformation")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DAL.Entities.LinkedPerson", b =>
                {
                    b.HasOne("DAL.Entities.LinkType", "LinkType")
                        .WithMany("linkedPeople")
                        .HasForeignKey("LinkTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DAL.Entities.Person", "Person")
                        .WithMany("LinkedPerson")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
